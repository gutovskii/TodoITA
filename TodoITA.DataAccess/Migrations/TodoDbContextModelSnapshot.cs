// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoITA.DataAccess;

namespace TodoITA.DataAccess.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TodoITA.DataAccess.Entities.TodoCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("TodoCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Work"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Gym"
                        });
                });

            modelBuilder.Entity("TodoITA.DataAccess.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TodoCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TodoCategoryId");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "My part but not the neighbour",
                            IsDone = false,
                            Text = "Room Cleaning",
                            TodoCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Boil eggs and cook the meat",
                            IsDone = true,
                            Text = "To Cook",
                            TodoCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "With Mr.Proper",
                            IsDone = false,
                            Text = "Wash the Dishes",
                            TodoCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "ASP.NET Core 3.1, MS SQL",
                            IsDone = true,
                            Text = "Make Backend",
                            TodoCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "React, Redux",
                            IsDone = false,
                            Text = "Make Frontend",
                            TodoCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "NUnit",
                            IsDone = false,
                            Text = "Make Tests",
                            TodoCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "Squats, Lunges, Extension, Caviar",
                            IsDone = true,
                            Text = "Legs",
                            TodoCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "Front, Middle, Back",
                            IsDone = true,
                            Text = "Shoulders",
                            TodoCategoryId = 3
                        });
                });

            modelBuilder.Entity("TodoITA.DataAccess.Entities.TodoItem", b =>
                {
                    b.HasOne("TodoITA.DataAccess.Entities.TodoCategory", "TodoCategory")
                        .WithMany("TodoItems")
                        .HasForeignKey("TodoCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
